export const V=new Proxy(((...r)=>r.reduce(((r,o)=>{if("function"!=typeof o)throw new TypeError(`Verticalize: ${o?.constructor.name??o} value is not a function`);return r instanceof Promise?r.then(o._Vprop?r=>r[o._Vprop]:o):o._Vprop?r[o._Vprop]:o(r)}))),{get(r,o){const e=(...r)=>e=>{if("function"!=typeof e[o])throw new Error(`Verticalize: ${e?.constructor.name??e} value has no method .${o}()`);return e[o].apply(e,r)};return e._Vprop=o,e}});